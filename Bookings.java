package entities;
// Generated 24 mai 2020 05:58:50 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Bookings generated by hbm2java
 */
@Entity
@Table(name = "bookings", catalog = "bookall")
public class Bookings implements java.io.Serializable {

	private Long id;
	private BookingMethodes bookingMethodes;
	private BookingStatus bookingStatus;
	private Clients clients;
	private long category;
	private Date startTime;
	private Date endTime;
	private String note;
	private Date createdAt;
	private Date updatedAt;
	private Set<Receipts> receiptses = new HashSet<Receipts>(0);
	private Set<Services> serviceses = new HashSet<Services>(0);

	public Bookings() {
	}

	public Bookings(BookingMethodes bookingMethodes, BookingStatus bookingStatus, Clients clients, long category,
			Date startTime, Date endTime, String note, Date createdAt, Date updatedAt) {
		this.bookingMethodes = bookingMethodes;
		this.bookingStatus = bookingStatus;
		this.clients = clients;
		this.category = category;
		this.startTime = startTime;
		this.endTime = endTime;
		this.note = note;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Bookings(BookingMethodes bookingMethodes, BookingStatus bookingStatus, Clients clients, long category,
			Date startTime, Date endTime, String note, Date createdAt, Date updatedAt, Set<Receipts> receiptses,
			Set<Services> serviceses) {
		this.bookingMethodes = bookingMethodes;
		this.bookingStatus = bookingStatus;
		this.clients = clients;
		this.category = category;
		this.startTime = startTime;
		this.endTime = endTime;
		this.note = note;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.receiptses = receiptses;
		this.serviceses = serviceses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "booking_method", nullable = false)
	public BookingMethodes getBookingMethodes() {
		return this.bookingMethodes;
	}

	public void setBookingMethodes(BookingMethodes bookingMethodes) {
		this.bookingMethodes = bookingMethodes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status_fk", nullable = false)
	public BookingStatus getBookingStatus() {
		return this.bookingStatus;
	}

	public void setBookingStatus(BookingStatus bookingStatus) {
		this.bookingStatus = bookingStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "client_fk", nullable = false)
	public Clients getClients() {
		return this.clients;
	}

	public void setClients(Clients clients) {
		this.clients = clients;
	}

	@Column(name = "category", nullable = false)
	public long getCategory() {
		return this.category;
	}

	public void setCategory(long category) {
		this.category = category;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "start_time", nullable = false, length = 8)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "end_time", nullable = false, length = 8)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "note", nullable = false, length = 50)
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_at", nullable = false, length = 10)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated_at", nullable = false, length = 10)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bookings")
	public Set<Receipts> getReceiptses() {
		return this.receiptses;
	}

	public void setReceiptses(Set<Receipts> receiptses) {
		this.receiptses = receiptses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "correspendence_services_booking", catalog = "bookall", joinColumns = {
			@JoinColumn(name = "booking_fk", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "service_fk", nullable = false, updatable = false) })
	public Set<Services> getServiceses() {
		return this.serviceses;
	}

	public void setServiceses(Set<Services> serviceses) {
		this.serviceses = serviceses;
	}

}
