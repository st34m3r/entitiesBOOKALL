package entities;
// Generated 24 mai 2020 05:58:50 by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Clients generated by hbm2java
 */
@Entity
@Table(name = "clients", catalog = "bookall")
public class Clients implements java.io.Serializable {

	private long userId;
	private Users users;
	private Set<Notifications> notificationses = new HashSet<Notifications>(0);
	private Set<Payements> payementses = new HashSet<Payements>(0);
	private Set<Reviews> reviewses = new HashSet<Reviews>(0);
	private Set<Bookings> bookingses = new HashSet<Bookings>(0);
	private Set<Favorites> favoriteses = new HashSet<Favorites>(0);

	public Clients() {
	}

	public Clients(Users users) {
		this.users = users;
	}

	public Clients(Users users, Set<Notifications> notificationses, Set<Payements> payementses, Set<Reviews> reviewses,
			Set<Bookings> bookingses, Set<Favorites> favoriteses) {
		this.users = users;
		this.notificationses = notificationses;
		this.payementses = payementses;
		this.reviewses = reviewses;
		this.bookingses = bookingses;
		this.favoriteses = favoriteses;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "users"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "user_id", unique = true, nullable = false)
	public long getUserId() {
		return this.userId;
	}

	public void setUserId(long userId) {
		this.userId = userId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "clients")
	public Set<Notifications> getNotificationses() {
		return this.notificationses;
	}

	public void setNotificationses(Set<Notifications> notificationses) {
		this.notificationses = notificationses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "clients")
	public Set<Payements> getPayementses() {
		return this.payementses;
	}

	public void setPayementses(Set<Payements> payementses) {
		this.payementses = payementses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "clients")
	public Set<Reviews> getReviewses() {
		return this.reviewses;
	}

	public void setReviewses(Set<Reviews> reviewses) {
		this.reviewses = reviewses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "clients")
	public Set<Bookings> getBookingses() {
		return this.bookingses;
	}

	public void setBookingses(Set<Bookings> bookingses) {
		this.bookingses = bookingses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "clients")
	public Set<Favorites> getFavoriteses() {
		return this.favoriteses;
	}

	public void setFavoriteses(Set<Favorites> favoriteses) {
		this.favoriteses = favoriteses;
	}

}
