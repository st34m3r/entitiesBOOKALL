package entities;
// Generated 24 mai 2020 05:58:50 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Services generated by hbm2java
 */
@Entity
@Table(name = "services", catalog = "bookall")
public class Services implements java.io.Serializable {

	private Long id;
	private Currencies currencies;
	private ServiceCategories serviceCategories;
	private String name;
	private int durationService;
	private String serviceDescription;
	private float price;
	private boolean requiredDeposit;
	private boolean isBookableByPhone;
	private Date createdAt;
	private Date updatedAt;
	private Set<Bookings> bookingses = new HashSet<Bookings>(0);

	public Services() {
	}

	public Services(Currencies currencies, ServiceCategories serviceCategories, String name, int durationService,
			String serviceDescription, float price, boolean requiredDeposit, boolean isBookableByPhone, Date createdAt,
			Date updatedAt) {
		this.currencies = currencies;
		this.serviceCategories = serviceCategories;
		this.name = name;
		this.durationService = durationService;
		this.serviceDescription = serviceDescription;
		this.price = price;
		this.requiredDeposit = requiredDeposit;
		this.isBookableByPhone = isBookableByPhone;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Services(Currencies currencies, ServiceCategories serviceCategories, String name, int durationService,
			String serviceDescription, float price, boolean requiredDeposit, boolean isBookableByPhone, Date createdAt,
			Date updatedAt, Set<Bookings> bookingses) {
		this.currencies = currencies;
		this.serviceCategories = serviceCategories;
		this.name = name;
		this.durationService = durationService;
		this.serviceDescription = serviceDescription;
		this.price = price;
		this.requiredDeposit = requiredDeposit;
		this.isBookableByPhone = isBookableByPhone;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.bookingses = bookingses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "currency_fk", nullable = false)
	public Currencies getCurrencies() {
		return this.currencies;
	}

	public void setCurrencies(Currencies currencies) {
		this.currencies = currencies;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "service_category_fk", nullable = false)
	public ServiceCategories getServiceCategories() {
		return this.serviceCategories;
	}

	public void setServiceCategories(ServiceCategories serviceCategories) {
		this.serviceCategories = serviceCategories;
	}

	@Column(name = "name", nullable = false, length = 20)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "duration_service", nullable = false)
	public int getDurationService() {
		return this.durationService;
	}

	public void setDurationService(int durationService) {
		this.durationService = durationService;
	}

	@Column(name = "service_description", nullable = false, length = 65535)
	public String getServiceDescription() {
		return this.serviceDescription;
	}

	public void setServiceDescription(String serviceDescription) {
		this.serviceDescription = serviceDescription;
	}

	@Column(name = "price", nullable = false, precision = 12, scale = 0)
	public float getPrice() {
		return this.price;
	}

	public void setPrice(float price) {
		this.price = price;
	}

	@Column(name = "required_deposit", nullable = false)
	public boolean isRequiredDeposit() {
		return this.requiredDeposit;
	}

	public void setRequiredDeposit(boolean requiredDeposit) {
		this.requiredDeposit = requiredDeposit;
	}

	@Column(name = "is_bookable_by_phone", nullable = false)
	public boolean isIsBookableByPhone() {
		return this.isBookableByPhone;
	}

	public void setIsBookableByPhone(boolean isBookableByPhone) {
		this.isBookableByPhone = isBookableByPhone;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_at", nullable = false, length = 10)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated_at", nullable = false, length = 10)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "correspendence_services_booking", catalog = "bookall", joinColumns = {
			@JoinColumn(name = "service_fk", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "booking_fk", nullable = false, updatable = false) })
	public Set<Bookings> getBookingses() {
		return this.bookingses;
	}

	public void setBookingses(Set<Bookings> bookingses) {
		this.bookingses = bookingses;
	}

}
